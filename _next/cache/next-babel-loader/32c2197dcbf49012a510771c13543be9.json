{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useEffect } from 'react';\nimport { getFormbuilderByIdService } from '../../services/form';\nimport { map } from 'lodash';\nimport ReactHtmlParser from 'react-html-parser';\nimport { Button, FormGroup, Input } from 'reactstrap';\n\nfunction Form(_ref) {\n  var data = _ref.data;\n\n  var _useState = useState([]),\n      formdata = _useState[0],\n      setFormData = _useState[1];\n\n  var _useState2 = useState({}),\n      formState = _useState2[0],\n      setFormState = _useState2[1];\n\n  var getFormByID = function getFormByID() {\n    var res;\n    return _regeneratorRuntime.async(function getFormByID$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(getFormbuilderByIdService(data.formdata));\n\n          case 2:\n            res = _context.sent;\n\n            if (res && res.status === 200) {\n              setFormData(JSON.parse(res.data.list));\n            }\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    });\n  };\n\n  useEffect(function () {\n    getFormByID();\n  }, []);\n\n  var handleChange = function handleChange(event) {\n    event.persist();\n    setFormState(function (formState) {\n      return _objectSpread({}, formState, _defineProperty({}, event.target.name, event.target.value));\n    });\n  };\n\n  console.log(formState);\n  return __jsx(\"section\", {\n    className: \"sec-tb\"\n  }, __jsx(\"div\", {\n    className: \"container\"\n  }, __jsx(\"div\", {\n    className: \"max750\"\n  }, map(formdata, function (item, index) {\n    if (item.type === 'header') {\n      return __jsx(React.Fragment, null, __jsx(\"div\", {\n        className: \"max600 entry-head text-center\"\n      }, ReactHtmlParser(item.label)));\n    }\n\n    if (item.type === 'paragraph') {\n      return __jsx(\"p\", {\n        className: item.className\n      }, ReactHtmlParser(item.label));\n    }\n\n    if (item.type === 'radio-group') {\n      return __jsx(\"div\", {\n        className: \"mb-30 text-center\"\n      }, map(item.values, function (items, key) {\n        return __jsx(\"label\", {\n          className: \"radio\",\n          key: key,\n          style: {\n            marginLeft: '20px'\n          }\n        }, __jsx(\"input\", {\n          type: \"radio\",\n          name: \"check1\"\n        }), __jsx(\"span\", null), items.label);\n      }));\n    }\n\n    if (item.type === 'text') {\n      return __jsx(React.Fragment, null, __jsx(\"div\", {\n        className: \"col-12\"\n      }, __jsx(\"label\", {\n        className: \"block\"\n      }, __jsx(\"span\", {\n        className: \"title\"\n      }, item.label), __jsx(Input, {\n        className: \"input\",\n        name: item.name,\n        type: \"text\",\n        placeholder: item.placeholder,\n        style: {\n          width: '100%'\n        },\n        onChange: function onChange(e) {\n          return handleChange(e);\n        }\n      }))));\n    }\n\n    if (item.type === 'textarea') {\n      return __jsx(React.Fragment, null, __jsx(\"div\", {\n        className: \"col-12\"\n      }, __jsx(\"label\", {\n        className: \"block\"\n      }, __jsx(\"span\", {\n        className: \"title\"\n      }, item.label, \"(\", __jsx(\"span\", {\n        className: \"require\"\n      }, \"*\"), \")\"), __jsx(\"textarea\", {\n        className: \"input\"\n      }))));\n    }\n\n    if (item.type === 'button') {\n      return __jsx(React.Fragment, null, __jsx(\"div\", {\n        className: \"col-12 text-center\"\n      }, __jsx(\"button\", {\n        className: \"btn\"\n      }, item.label)));\n    }\n  }))));\n}\n\nexport default Form;","map":null,"metadata":{},"sourceType":"module"}