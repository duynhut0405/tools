{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport Action from './actions';\nconst initialState = {\n  listData: [],\n  data: [],\n  type: [],\n  listTypeByID: [],\n  urlVideo: {},\n  listDataByYear: []\n};\n\nconst regulationReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case Action.GET_REGULATION_PAGINATION_RESPONSE:\n      return _objectSpread({}, state, {\n        listData: action.data\n      });\n\n    case Action.SEARCH_REGULATION_RESPONSE:\n      return _objectSpread({}, state, {\n        data: action.data\n      });\n\n    case Action.GET_TYPE_REGULATION_RESPONSE:\n      return _objectSpread({}, state, {\n        type: action.data\n      });\n\n    case Action.GET_URL_VIDEO_RESPONSE:\n      return _objectSpread({}, state, {\n        urlVideo: action.data\n      });\n\n    case Action.GET_REGULATION_BY_YEAR_RESPONSE:\n      return _objectSpread({}, state, {\n        listDataByYear: action.data\n      });\n\n    case Action.GET_TYPE_REGULATION_BY_ID_RESPONSE:\n      {\n        return _objectSpread({}, state, {\n          listTypeByID: action.data\n        });\n      }\n\n    default:\n      return state;\n  }\n};\n\nexport default regulationReducer;","map":null,"metadata":{},"sourceType":"module"}