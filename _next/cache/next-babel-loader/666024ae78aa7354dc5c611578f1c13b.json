{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport Actions from './actions';\nvar initialState = {\n  listBranches: [],\n  listProvince: [],\n  listDistrict: []\n};\n\nvar mapReducer = function mapReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case Actions.SEARCH_BRANCHES_RESPONSE:\n      return _objectSpread({}, state, {\n        listBranches: action.data\n      });\n\n    case Actions.GET_PROVINCE_RESPONSE:\n      return _objectSpread({}, state, {\n        listProvince: action.data\n      });\n\n    case Actions.GET_DISTRICT_RESPONSE:\n      return _objectSpread({}, state, {\n        listDistrict: action.data\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default mapReducer;","map":null,"metadata":{},"sourceType":"module"}