{"ast":null,"code":"import actions from './actions';\nimport { findAllByCategory } from '../../services/news';\nimport { takeLatest, put, all, fork } from 'redux-saga/effects';\n\nfunction* getNewByCategorySaga() {\n  yield takeLatest(actions.FILL_NEWS_BY_CATEGORY_REQUEST, function* (params) {\n    const {\n      id,\n      page,\n      year\n    } = params;\n\n    try {\n      const res = yield findAllByCategory(id, page, year);\n\n      if (res.status === 200) {\n        yield put({\n          type: actions.FILL_NEWS_BY_CATEGORY_RESPONSE,\n          data: res.data\n        });\n      } else {// console.log(res);\n      }\n    } catch (error) {// console.log(error);\n    }\n  });\n}\n\nexport default function* rootSaga() {\n  yield all([fork(getNewByCategorySaga)]);\n}","map":null,"metadata":{},"sourceType":"module"}