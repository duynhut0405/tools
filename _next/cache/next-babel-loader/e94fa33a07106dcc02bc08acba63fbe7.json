{"ast":null,"code":"var _jsxFileName = \"F:\\\\MGROUP\\\\MBnextjs\\\\mb-frontend\\\\components\\\\block\\\\Pages.js\";\nvar __jsx = React.createElement;\nimport React, { useState, useEffect } from 'react';\nimport { map, slice } from 'lodash';\nimport Proptypes from 'prop-types';\nimport { getPagesByIdService } from '../../services/page';\nimport { useTranslation } from 'react-i18next';\nconst propTypes = {\n  data: Proptypes.object.isRequired,\n  type: Proptypes.string,\n  id: Proptypes.number\n};\n\nfunction Pages({\n  data,\n  type,\n  id\n}) {\n  const {\n    0: page\n  } = useState(3);\n  const {\n    0: listPage,\n    1: setListPage\n  } = useState([]);\n\n  const getPageBlock = async () => {\n    const ids = map(data.pages, values => values.value);\n    const res = await getPagesByIdService(ids);\n\n    if (res && res.status === 200) {\n      setListPage(res.data);\n    }\n  };\n\n  useEffect(() => {\n    getPageBlock();\n  }, []);\n  const {\n    t\n  } = useTranslation();\n  const listNews = slice(listPage, 0, page);\n\n  if (type && type === '1') {\n    return __jsx(\"div\", {\n      className: \"container sec-tb block-page\",\n      id: id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      className: \"entry-head text-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }), __jsx(\"div\", {\n      className: \"list-5 row list-item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, map(listNews, item => __jsx(\"div\", {\n      className: \"col-md-4\",\n      key: item.newsId,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, __jsx(\"a\", {\n      href: `/page/${item.slug}`,\n      className: \"item \",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      className: \"img tRes_71\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, __jsx(\"img\", {\n      className: \"lazy-hidden\",\n      \"data-lazy-type\": \"image\",\n      src: item.baseImage,\n      alt: \"icon\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    })), __jsx(\"div\", {\n      className: \"divtext\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, __jsx(\"h4\", {\n      className: \"title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, item.name), __jsx(\"div\", {\n      className: \"desc line4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, item.meta_description, \"..\")))))));\n  }\n\n  if (type && type === '2') {\n    return __jsx(\"div\", {\n      className: \"container\",\n      id: id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, __jsx(\"section\", {\n      className: \"sec-tb  block-page block-type-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, __jsx(\"h2\", {\n      className: \"ht styleht\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, data.title), __jsx(\"div\", {\n      className: \"list-7  list-item row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, map(listNews, item => __jsx(\"div\", {\n      className: \"col-md-6\",\n      key: item.newsId,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, __jsx(\"a\", {\n      href: `/page/${item.slug}`,\n      className: \"item item-inline-table style-colummb\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      className: \"img\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, __jsx(\"img\", {\n      className: \"lazy-hidden\",\n      \"data-lazy-type\": \"image\",\n      src: item.baseImage,\n      alt: \"icon\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    })), __jsx(\"div\", {\n      className: \"divtext\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, __jsx(\"h4\", {\n      className: \"title line2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, item.name), __jsx(\"div\", {\n      className: \"desc line4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, item.meta_description, \"..\"))))))));\n  }\n\n  if (type && type === '3') {\n    return __jsx(\"section\", {\n      className: \"sec-tb\",\n      id: id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, __jsx(\"h2\", {\n      className: \"ht text-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, data.title), __jsx(\"div\", {\n      className: \"list-7  list-item row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, map(listPage, (values, index) => __jsx(\"div\", {\n      key: index,\n      className: \"col-md-6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, __jsx(\"a\", {\n      href: values.slug,\n      className: \"item item-inline-table\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      className: \"img\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, __jsx(\"img\", {\n      className: \"lazy-hidden\",\n      \"data-lazy-type\": \"image\",\n      src: values.baseImage,\n      alt: \"icon\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    })), __jsx(\"div\", {\n      className: \"divtext\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, __jsx(\"h4\", {\n      className: \"title line2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, values.name), __jsx(\"div\", {\n      className: \"desc line4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, values.meta_description)))))), __jsx(\"div\", {\n      className: \"tags\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, map(data.listTag, (values, index) => __jsx(\"a\", {\n      key: index,\n      className: \"tag\",\n      href: values.url,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, values.name)))));\n  }\n\n  if (type && type === '4') {\n    return __jsx(\"section\", {\n      className: \"sec-tb bg-gray\",\n      id: id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      className: \"max750\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }), __jsx(\"h2\", {\n      className: \"ht text-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }, data.title), __jsx(\"ul\", {\n      className: \"cols-2 link2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }, map(listPage, (values, index) => __jsx(\"li\", {\n      key: index,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }, __jsx(\"a\", {\n      href: values.slug,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }, values.name)))), __jsx(\"div\", {\n      className: \"tags\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }, map(data.listTag, (values, index) => __jsx(\"a\", {\n      key: index,\n      className: \"tag\",\n      href: values.url,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }, values.name)))));\n  }\n}\n\nPages.propTypes = propTypes;\nexport default Pages;","map":{"version":3,"sources":["F:/MGROUP/MBnextjs/mb-frontend/components/block/Pages.js"],"names":["React","useState","useEffect","map","slice","Proptypes","getPagesByIdService","useTranslation","propTypes","data","object","isRequired","type","string","id","number","Pages","page","listPage","setListPage","getPageBlock","ids","pages","values","value","res","status","t","listNews","item","newsId","slug","baseImage","name","meta_description","title","index","listTag","url"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { map, slice } from 'lodash';\r\nimport Proptypes from 'prop-types';\r\nimport { getPagesByIdService } from '../../services/page';\r\nimport { useTranslation } from 'react-i18next';\r\nconst propTypes = {\r\n  data: Proptypes.object.isRequired,\r\n  type: Proptypes.string,\r\n  id: Proptypes.number\r\n};\r\n\r\nfunction Pages({ data, type, id }) {\r\n  const [page] = useState(3);\r\n  const [listPage, setListPage] = useState([]);\r\n  const getPageBlock = async () => {\r\n    const ids = map(data.pages, values => values.value);\r\n    const res = await getPagesByIdService(ids);\r\n    if (res && res.status === 200) {\r\n      setListPage(res.data);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getPageBlock();\r\n  }, []);\r\n  const { t } = useTranslation();\r\n  const listNews = slice(listPage, 0, page);\r\n  if (type && type === '1') {\r\n    return (\r\n      <div className=\"container sec-tb block-page\" id={id}>\r\n        <div className=\"entry-head text-center\">{/* <h2 className=\"ht\">{data.title}</h2> */}</div>\r\n        <div className=\"list-5 row list-item\">\r\n          {map(listNews, item => (\r\n            <div className=\"col-md-4\" key={item.newsId}>\r\n              <a href={`/page/${item.slug}`} className=\"item \">\r\n                <div className=\"img tRes_71\">\r\n                  <img\r\n                    className=\"lazy-hidden\"\r\n                    data-lazy-type=\"image\"\r\n                    src={item.baseImage}\r\n                    alt=\"icon\"\r\n                  />\r\n                </div>\r\n                <div className=\"divtext\">\r\n                  <h4 className=\"title\">{item.name}</h4>\r\n                  <div className=\"desc line4\">{item.meta_description}..</div>\r\n                </div>\r\n              </a>\r\n            </div>\r\n          ))}\r\n        </div>\r\n        {/* <div className=\"pages\">\r\n          <ul className=\"page-numbers\">\r\n            <a className=\"btn lg\" href=\"#\">\r\n            {t('view.viewall')}\r\n            </a>\r\n          </ul>\r\n        </div> */}\r\n      </div>\r\n    );\r\n  }\r\n  if (type && type === '2') {\r\n    return (\r\n      <div className=\"container\" id={id}>\r\n        <section className=\"sec-tb  block-page block-type-2\">\r\n          <h2 className=\"ht styleht\">{data.title}</h2>\r\n          <div className=\"list-7  list-item row\">\r\n            {map(listNews, item => (\r\n              <div className=\"col-md-6\" key={item.newsId}>\r\n                <a href={`/page/${item.slug}`} className=\"item item-inline-table style-colummb\">\r\n                  <div className=\"img\">\r\n                    <img\r\n                      className=\"lazy-hidden\"\r\n                      data-lazy-type=\"image\"\r\n                      src={item.baseImage}\r\n                      alt=\"icon\"\r\n                    />\r\n                  </div>\r\n                  <div className=\"divtext\">\r\n                    <h4 className=\"title line2\">{item.name}</h4>\r\n                    <div className=\"desc line4\">{item.meta_description}..</div>\r\n                  </div>\r\n                </a>\r\n              </div>\r\n            ))}\r\n          </div>\r\n          {/* <div className=\"pages\">\r\n            <ul className=\"page-numbers\">\r\n              <a className=\"btn lg\" href=\"#\">\r\n              {t('view.viewall')}\r\n              </a>\r\n            </ul>\r\n          </div> */}\r\n        </section>\r\n      </div>\r\n    );\r\n  }\r\n  if (type && type === '3') {\r\n    return (\r\n      <section className=\"sec-tb\" id={id}>\r\n        <div className=\"container\">\r\n          <h2 className=\"ht text-center\">{data.title}</h2>\r\n          <div className=\"list-7  list-item row\">\r\n            {map(listPage, (values, index) => (\r\n              <div key={index} className=\"col-md-6\">\r\n                <a href={values.slug} className=\"item item-inline-table\">\r\n                  <div className=\"img\">\r\n                    <img\r\n                      className=\"lazy-hidden\"\r\n                      data-lazy-type=\"image\"\r\n                      src={values.baseImage}\r\n                      alt=\"icon\"\r\n                    />\r\n                  </div>\r\n                  <div className=\"divtext\">\r\n                    <h4 className=\"title line2\">{values.name}</h4>\r\n                    <div className=\"desc line4\">{values.meta_description}</div>\r\n                  </div>\r\n                </a>\r\n              </div>\r\n            ))}\r\n          </div>\r\n          <div className=\"tags\">\r\n            {map(data.listTag, (values, index) => (\r\n              <a key={index} className=\"tag\" href={values.url}>\r\n                {values.name}\r\n              </a>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      </section>\r\n    );\r\n  }\r\n  if (type && type === '4') {\r\n    return (\r\n      <section className=\"sec-tb bg-gray\" id={id}>\r\n        <div className=\"container\">\r\n          <div className=\"max750\"></div>\r\n          <h2 className=\"ht text-center\">{data.title}</h2>\r\n          <ul className=\"cols-2 link2\">\r\n            {map(listPage, (values, index) => (\r\n              <li key={index}>\r\n                <a href={values.slug}>{values.name}</a>\r\n              </li>\r\n            ))}\r\n          </ul>\r\n          <div className=\"tags\">\r\n            {map(data.listTag, (values, index) => (\r\n              <a key={index} className=\"tag\" href={values.url}>\r\n                {values.name}\r\n              </a>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      </section>\r\n    );\r\n  }\r\n}\r\nPages.propTypes = propTypes;\r\n\r\nexport default Pages;\r\n"]},"metadata":{},"sourceType":"module"}