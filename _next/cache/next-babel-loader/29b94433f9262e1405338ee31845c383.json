{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useEffect } from 'react';\nimport { Carousel, BlockRender, MenuMiddle, DowloadCategory } from '../../components/common';\nimport { ListDowloadFIle, ListDowloadVideo } from '../../components/common/download';\nimport Layout from '../../components/layout';\nimport About from '../../components/about';\nimport Investors from '../../components/investors';\nimport OtherNews from '../../components/otherNews';\nimport Transaction from '../../components/transaction';\nimport { map } from 'lodash';\nimport { PageActions } from '../../store/actions';\nimport { useRouter } from 'next/router';\nimport { withTranslation } from '../../i18n';\nimport { connect } from 'react-redux';\n\nfunction Page({\n  list,\n  silder,\n  menuMiddle,\n  getPage\n}) {\n  const router = useRouter();\n  const {\n    name\n  } = router.query;\n  let routerUrl = null;\n  let params = '';\n  map(name, url => params = `${params}/${url}`);\n  routerUrl = params.slice(1, params.length);\n  useEffect(() => {\n    getPage(routerUrl);\n  }, []);\n  console.log(name);\n  return __jsx(Layout, {\n    title: list.meta_title\n  }, __jsx(\"div\", {\n    className: \"main_content\"\n  }, __jsx(Carousel, {\n    silder: silder\n  }), __jsx(MenuMiddle, {\n    data: menuMiddle,\n    query: routerUrl\n  }), list.id === 34652 && __jsx(Investors, null), list.id === 34653 && __jsx(Investors, null), list.id === 34654 && __jsx(ListDowloadFIle, {\n    type: 1,\n    search: true\n  }), list.id === 34655 && __jsx(ListDowloadVideo, {\n    type: 2\n  }), list.id === 34656 && __jsx(ListDowloadVideo, {\n    type: 3\n  }), list.id === 34657 && __jsx(ListDowloadFIle, {\n    type: 4,\n    search: true\n  }), list.id === 34658 && __jsx(ListDowloadFIle, {\n    type: 6,\n    search: true\n  }), list.id === 34660 && __jsx(OtherNews, null), list.id === 34217 && __jsx(About, null), list.id === 34669 && __jsx(Transaction, null), __jsx(BlockRender, {\n    data: list.pageBlocks\n  }), list.template === 4 && __jsx(DowloadCategory, null)));\n}\n\nconst mapStateToProp = state => {\n  return {\n    list: state.pageReducer.homedata,\n    silder: state.pageReducer.silder,\n    menuMiddle: state.pageReducer.menuMiddle\n  };\n};\n\nconst mapDispatchToProps = {\n  getPage: PageActions.getHomeAction\n};\n\nPage.getInitialProps = async () => ({\n  namespacesRequired: ['common', 'common']\n});\n\nexport default connect(mapStateToProp, mapDispatchToProps)(withTranslation('common')(Page));","map":null,"metadata":{},"sourceType":"module"}