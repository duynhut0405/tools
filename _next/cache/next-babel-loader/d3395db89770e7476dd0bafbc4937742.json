{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport actions from './actions';\nimport { takeLatest, put, all, fork } from 'redux-saga/effects';\nimport { getRateService } from '../../services/rate';\n\nfunction* getRateSaga() {\n  yield takeLatest(actions.GET_RATE_REQUEST, function* () {\n    try {\n      const res = yield getRateService();\n\n      if (res.status === 200) {\n        let list = {};\n        const sortData = yield res.data.sort((date_1, date_2) => date_2.created_at - date_1.created_at);\n\n        for (let i = 0; i < 1; i++) {\n          list = _objectSpread({}, list, {}, sortData[i]);\n        }\n\n        yield put({\n          type: actions.GET_RATE_RESPONSE,\n          data: list\n        });\n      } else {// console.log(res);\n      }\n    } catch (error) {// console.log(error);\n    }\n  });\n}\n\nexport default function* rootSaga() {\n  yield all([fork(getRateSaga)]);\n}","map":{"version":3,"sources":["/home/user/mb-frontend/store/rate/saga.js"],"names":["actions","takeLatest","put","all","fork","getRateService","getRateSaga","GET_RATE_REQUEST","res","status","list","sortData","data","sort","date_1","date_2","created_at","i","type","GET_RATE_RESPONSE","error","rootSaga"],"mappings":";;;;;;AAAA,OAAOA,OAAP,MAAoB,WAApB;AACA,SAASC,UAAT,EAAqBC,GAArB,EAA0BC,GAA1B,EAA+BC,IAA/B,QAA2C,oBAA3C;AACA,SAASC,cAAT,QAA+B,qBAA/B;;AAEA,UAAUC,WAAV,GAAwB;AACtB,QAAML,UAAU,CAACD,OAAO,CAACO,gBAAT,EAA2B,aAAY;AACrD,QAAI;AACF,YAAMC,GAAG,GAAG,MAAMH,cAAc,EAAhC;;AACA,UAAIG,GAAG,CAACC,MAAJ,KAAe,GAAnB,EAAwB;AACtB,YAAIC,IAAI,GAAG,EAAX;AACA,cAAMC,QAAQ,GAAG,MAAMH,GAAG,CAACI,IAAJ,CAASC,IAAT,CACrB,CAACC,MAAD,EAASC,MAAT,KAAoBA,MAAM,CAACC,UAAP,GAAoBF,MAAM,CAACE,UAD1B,CAAvB;;AAGA,aAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,CAApB,EAAuBA,CAAC,EAAxB,EAA4B;AAC1BP,UAAAA,IAAI,qBAAQA,IAAR,MAAiBC,QAAQ,CAACM,CAAD,CAAzB,CAAJ;AACD;;AACD,cAAMf,GAAG,CAAC;AAAEgB,UAAAA,IAAI,EAAElB,OAAO,CAACmB,iBAAhB;AAAmCP,UAAAA,IAAI,EAAEF;AAAzC,SAAD,CAAT;AACD,OATD,MASO,CACL;AACD;AACF,KAdD,CAcE,OAAOU,KAAP,EAAc,CACd;AACD;AACF,GAlBe,CAAhB;AAmBD;;AAED,eAAe,UAAUC,QAAV,GAAqB;AAClC,QAAMlB,GAAG,CAAC,CAACC,IAAI,CAACE,WAAD,CAAL,CAAD,CAAT;AACD","sourcesContent":["import actions from './actions';\nimport { takeLatest, put, all, fork } from 'redux-saga/effects';\nimport { getRateService } from '../../services/rate';\n\nfunction* getRateSaga() {\n  yield takeLatest(actions.GET_RATE_REQUEST, function*() {\n    try {\n      const res = yield getRateService();\n      if (res.status === 200) {\n        let list = {};\n        const sortData = yield res.data.sort(\n          (date_1, date_2) => date_2.created_at - date_1.created_at\n        );\n        for (let i = 0; i < 1; i++) {\n          list = { ...list, ...sortData[i] };\n        }\n        yield put({ type: actions.GET_RATE_RESPONSE, data: list });\n      } else {\n        // console.log(res);\n      }\n    } catch (error) {\n      // console.log(error);\n    }\n  });\n}\n\nexport default function* rootSaga() {\n  yield all([fork(getRateSaga)]);\n}\n"]},"metadata":{},"sourceType":"module"}