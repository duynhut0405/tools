{"ast":null,"code":"import request from '../utils/request';\n\nconst getTypeRegulationServices = () => {\n  return request({\n    url: `/regulation/type`,\n    method: 'GET'\n  }).then(res => {\n    return res;\n  }).catch(error => {\n    return error.response.data;\n  });\n};\n\nconst getTypeRegulationByIDServices = id => {\n  return request({\n    url: `/regulation/type/${id}`,\n    method: 'GET'\n  }).then(res => {\n    return res;\n  }).catch(error => {\n    return error.response.data;\n  });\n};\n\nconst fillRegulationServices = data => {\n  return request({\n    url: `/regulation/search`,\n    method: 'POST',\n    data: data\n  }).then(res => {\n    return res;\n  }).catch(error => {\n    return error.response.data;\n  });\n};\n\nconst getUrlVideoService = data => {\n  return request({\n    url: `/regulation/url/${data}`,\n    method: 'GET'\n  }).then(res => {\n    return res;\n  }).catch(error => {\n    return error.response.data;\n  });\n};\n\nconst getRegulationPagation = (type, year, page) => {\n  return request({\n    url: `/regulation/pagination/${type}/${year}?number=10&page=${page}`,\n    method: 'GET'\n  }).then(res => {\n    return res;\n  }).catch(error => {\n    return error.response.data;\n  });\n};\n\nconst getRegulationListYear = (type, detailTypeId, number, page, year) => {\n  return request({\n    url: `/regulation/investors/${type}?detailTypeId=${detailTypeId}&number=${number}&page=${page}&year=${year}`,\n    method: 'GET'\n  }).then(res => {\n    return res;\n  }).catch(error => {\n    return error.response.data;\n  });\n};\n\nexport { fillRegulationServices, getTypeRegulationServices, getUrlVideoService, getRegulationPagation, getRegulationListYear, getTypeRegulationByIDServices };","map":{"version":3,"sources":["F:/MGROUP/MBnextjs/mb-frontend/services/regulation.js"],"names":["request","getTypeRegulationServices","url","method","then","res","catch","error","response","data","getTypeRegulationByIDServices","id","fillRegulationServices","getUrlVideoService","getRegulationPagation","type","year","page","getRegulationListYear","detailTypeId","number"],"mappings":"AAAA,OAAOA,OAAP,MAAoB,kBAApB;;AAEA,MAAMC,yBAAyB,GAAG,MAAM;AACtC,SAAOD,OAAO,CAAC;AACbE,IAAAA,GAAG,EAAG,kBADO;AAEbC,IAAAA,MAAM,EAAE;AAFK,GAAD,CAAP,CAIJC,IAJI,CAICC,GAAG,IAAI;AACX,WAAOA,GAAP;AACD,GANI,EAOJC,KAPI,CAOEC,KAAK,IAAI;AACd,WAAOA,KAAK,CAACC,QAAN,CAAeC,IAAtB;AACD,GATI,CAAP;AAUD,CAXD;;AAaA,MAAMC,6BAA6B,GAAGC,EAAE,IAAI;AAC1C,SAAOX,OAAO,CAAC;AACbE,IAAAA,GAAG,EAAG,oBAAmBS,EAAG,EADf;AAEbR,IAAAA,MAAM,EAAE;AAFK,GAAD,CAAP,CAIJC,IAJI,CAICC,GAAG,IAAI;AACX,WAAOA,GAAP;AACD,GANI,EAOJC,KAPI,CAOEC,KAAK,IAAI;AACd,WAAOA,KAAK,CAACC,QAAN,CAAeC,IAAtB;AACD,GATI,CAAP;AAUD,CAXD;;AAaA,MAAMG,sBAAsB,GAAGH,IAAI,IAAI;AACrC,SAAOT,OAAO,CAAC;AACbE,IAAAA,GAAG,EAAG,oBADO;AAEbC,IAAAA,MAAM,EAAE,MAFK;AAGbM,IAAAA,IAAI,EAAEA;AAHO,GAAD,CAAP,CAKJL,IALI,CAKCC,GAAG,IAAI;AACX,WAAOA,GAAP;AACD,GAPI,EAQJC,KARI,CAQEC,KAAK,IAAI;AACd,WAAOA,KAAK,CAACC,QAAN,CAAeC,IAAtB;AACD,GAVI,CAAP;AAWD,CAZD;;AAaA,MAAMI,kBAAkB,GAAGJ,IAAI,IAAI;AACjC,SAAOT,OAAO,CAAC;AACbE,IAAAA,GAAG,EAAG,mBAAkBO,IAAK,EADhB;AAEbN,IAAAA,MAAM,EAAE;AAFK,GAAD,CAAP,CAIJC,IAJI,CAICC,GAAG,IAAI;AACX,WAAOA,GAAP;AACD,GANI,EAOJC,KAPI,CAOEC,KAAK,IAAI;AACd,WAAOA,KAAK,CAACC,QAAN,CAAeC,IAAtB;AACD,GATI,CAAP;AAUD,CAXD;;AAaA,MAAMK,qBAAqB,GAAG,CAACC,IAAD,EAAOC,IAAP,EAAaC,IAAb,KAAsB;AAClD,SAAOjB,OAAO,CAAC;AACbE,IAAAA,GAAG,EAAG,0BAAyBa,IAAK,IAAGC,IAAK,mBAAkBC,IAAK,EADtD;AAEbd,IAAAA,MAAM,EAAE;AAFK,GAAD,CAAP,CAIJC,IAJI,CAICC,GAAG,IAAI;AACX,WAAOA,GAAP;AACD,GANI,EAOJC,KAPI,CAOEC,KAAK,IAAI;AACd,WAAOA,KAAK,CAACC,QAAN,CAAeC,IAAtB;AACD,GATI,CAAP;AAUD,CAXD;;AAaA,MAAMS,qBAAqB,GAAG,CAACH,IAAD,EAAOI,YAAP,EAAqBC,MAArB,EAA6BH,IAA7B,EAAmCD,IAAnC,KAA4C;AACxE,SAAOhB,OAAO,CAAC;AACbE,IAAAA,GAAG,EAAG,yBAAwBa,IAAK,iBAAgBI,YAAa,WAAUC,MAAO,SAAQH,IAAK,SAAQD,IAAK,EAD9F;AAEbb,IAAAA,MAAM,EAAE;AAFK,GAAD,CAAP,CAIJC,IAJI,CAICC,GAAG,IAAI;AACX,WAAOA,GAAP;AACD,GANI,EAOJC,KAPI,CAOEC,KAAK,IAAI;AACd,WAAOA,KAAK,CAACC,QAAN,CAAeC,IAAtB;AACD,GATI,CAAP;AAUD,CAXD;;AAaA,SACEG,sBADF,EAEEX,yBAFF,EAGEY,kBAHF,EAIEC,qBAJF,EAKEI,qBALF,EAMER,6BANF","sourcesContent":["import request from '../utils/request';\r\n\r\nconst getTypeRegulationServices = () => {\r\n  return request({\r\n    url: `/regulation/type`,\r\n    method: 'GET'\r\n  })\r\n    .then(res => {\r\n      return res;\r\n    })\r\n    .catch(error => {\r\n      return error.response.data;\r\n    });\r\n};\r\n\r\nconst getTypeRegulationByIDServices = id => {\r\n  return request({\r\n    url: `/regulation/type/${id}`,\r\n    method: 'GET'\r\n  })\r\n    .then(res => {\r\n      return res;\r\n    })\r\n    .catch(error => {\r\n      return error.response.data;\r\n    });\r\n};\r\n\r\nconst fillRegulationServices = data => {\r\n  return request({\r\n    url: `/regulation/search`,\r\n    method: 'POST',\r\n    data: data\r\n  })\r\n    .then(res => {\r\n      return res;\r\n    })\r\n    .catch(error => {\r\n      return error.response.data;\r\n    });\r\n};\r\nconst getUrlVideoService = data => {\r\n  return request({\r\n    url: `/regulation/url/${data}`,\r\n    method: 'GET'\r\n  })\r\n    .then(res => {\r\n      return res;\r\n    })\r\n    .catch(error => {\r\n      return error.response.data;\r\n    });\r\n};\r\n\r\nconst getRegulationPagation = (type, year, page) => {\r\n  return request({\r\n    url: `/regulation/pagination/${type}/${year}?number=10&page=${page}`,\r\n    method: 'GET'\r\n  })\r\n    .then(res => {\r\n      return res;\r\n    })\r\n    .catch(error => {\r\n      return error.response.data;\r\n    });\r\n};\r\n\r\nconst getRegulationListYear = (type, detailTypeId, number, page, year) => {\r\n  return request({\r\n    url: `/regulation/investors/${type}?detailTypeId=${detailTypeId}&number=${number}&page=${page}&year=${year}`,\r\n    method: 'GET'\r\n  })\r\n    .then(res => {\r\n      return res;\r\n    })\r\n    .catch(error => {\r\n      return error.response.data;\r\n    });\r\n};\r\n\r\nexport {\r\n  fillRegulationServices,\r\n  getTypeRegulationServices,\r\n  getUrlVideoService,\r\n  getRegulationPagation,\r\n  getRegulationListYear,\r\n  getTypeRegulationByIDServices\r\n};\r\n"]},"metadata":{},"sourceType":"module"}