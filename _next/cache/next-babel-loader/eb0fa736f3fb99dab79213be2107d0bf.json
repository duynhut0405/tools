{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nvar __jsx = React.createElement;\nimport React, { useState, useEffect } from 'react';\nimport { map } from 'lodash';\nimport { getPagesByIdService } from '../../services/page';\n\nfunction MiniTabItem(_ref) {\n  var data = _ref.data;\n\n  var _useState = useState([]),\n      listPage = _useState[0],\n      setListPage = _useState[1];\n\n  var getPageBlock = function getPageBlock() {\n    var ids, res;\n    return _regeneratorRuntime.async(function getPageBlock$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            ids = map(data.pages, function (values) {\n              return values.value;\n            });\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(getPagesByIdService(ids));\n\n          case 3:\n            res = _context.sent;\n\n            if (res && res.status === 200) {\n              setListPage(res.data);\n            }\n\n          case 5:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    });\n  };\n\n  useEffect(function () {\n    getPageBlock();\n  }, []);\n  return __jsx(\"div\", {\n    className: \"container\"\n  }, __jsx(\"div\", {\n    className: \"list-7  list-item row style-table-menu\"\n  }, map(listPage, function (item) {\n    return __jsx(\"div\", {\n      className: \"col-md-6 style-colum1\",\n      key: item.newsId\n    }, __jsx(\"a\", {\n      href: \"/page/\".concat(item.slug),\n      className: \"item item-inline-table\"\n    }, __jsx(\"div\", {\n      className: \"img\"\n    }, __jsx(\"img\", {\n      className: \"lazy-hidden\",\n      \"data-lazy-type\": \"image\",\n      src: item.baseImage,\n      alt: \"icon\"\n    })), __jsx(\"div\", {\n      className: \"divtext\"\n    }, __jsx(\"h4\", {\n      className: \"title line2\"\n    }, item.name), __jsx(\"div\", {\n      className: \"desc line4\"\n    }, item.meta_description, \"..\"))));\n  })));\n}\n\nexport default MiniTabItem;","map":null,"metadata":{},"sourceType":"module"}