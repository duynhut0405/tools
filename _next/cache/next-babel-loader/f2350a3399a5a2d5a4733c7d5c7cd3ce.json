{"ast":null,"code":"var _jsxFileName = \"F:\\\\MGROUP\\\\MBnextjs\\\\mb-frontend\\\\components\\\\common\\\\Carousel.js\";\nvar __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport { map, isEmpty } from 'lodash';\nimport PropTypes from 'prop-types';\nimport { Carousel } from 'react-responsive-carousel';\nconst propType = {\n  silder: PropTypes.array.isRequired,\n  className: PropTypes.string\n};\n\nfunction Carousels({\n  silder,\n  className\n}) {\n  const getItems = (index, item) => {\n    const url = item.props.children[0].props.href;\n    window.location.href = url;\n  };\n\n  return __jsx(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, !isEmpty(silder) && __jsx(\"div\", {\n    className: className,\n    style: {\n      boxShadow: '0px 2px 26px 0px rgba(0,0,0,0.09)'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, __jsx(Carousel, {\n    showThumbs: false,\n    showStatus: false,\n    infiniteLoop: true,\n    onClickItem: getItems,\n    emulateTouch: true,\n    showIndicators: false,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, map(silder, (item, index) => __jsx(\"div\", {\n    key: index,\n    className: \"silder_items\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, __jsx(\"a\", {\n    href: item.url === undefined ? '#' : item.url,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, __jsx(\"img\", {\n    src: item.image,\n    alt: \"icon\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  })), __jsx(\"div\", {\n    className: `silder_content ${item.options} container`,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, __jsx(\"p\", {\n    className: \"text_content1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, item.note_1), __jsx(\"p\", {\n    className: \"text_content2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, item.note_2), __jsx(\"p\", {\n    className: \"text_content3\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, item.note_3), item.text_action !== undefined && __jsx(\"button\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, __jsx(\"a\", {\n    href: item.url,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, item.text_action))))))));\n}\n\nCarousels.propTypes = propType;\nexport default Carousels;","map":{"version":3,"sources":["F:/MGROUP/MBnextjs/mb-frontend/components/common/Carousel.js"],"names":["React","useState","map","isEmpty","PropTypes","Carousel","propType","silder","array","isRequired","className","string","Carousels","getItems","index","item","url","props","children","href","window","location","boxShadow","undefined","image","options","note_1","note_2","note_3","text_action","propTypes"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,GAAT,EAAcC,OAAd,QAA6B,QAA7B;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,QAAT,QAAyB,2BAAzB;AAEA,MAAMC,QAAQ,GAAG;AACfC,EAAAA,MAAM,EAAEH,SAAS,CAACI,KAAV,CAAgBC,UADT;AAEfC,EAAAA,SAAS,EAAEN,SAAS,CAACO;AAFN,CAAjB;;AAKA,SAASC,SAAT,CAAmB;AAAEL,EAAAA,MAAF;AAAUG,EAAAA;AAAV,CAAnB,EAA0C;AACxC,QAAMG,QAAQ,GAAG,CAACC,KAAD,EAAQC,IAAR,KAAiB;AAChC,UAAMC,GAAG,GAAGD,IAAI,CAACE,KAAL,CAAWC,QAAX,CAAoB,CAApB,EAAuBD,KAAvB,CAA6BE,IAAzC;AACAC,IAAAA,MAAM,CAACC,QAAP,CAAgBF,IAAhB,GAAuBH,GAAvB;AACD,GAHD;;AAIA,SACE,MAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,CAACb,OAAO,CAACI,MAAD,CAAR,IACC;AAAK,IAAA,SAAS,EAAEG,SAAhB;AAA2B,IAAA,KAAK,EAAE;AAAEY,MAAAA,SAAS,EAAE;AAAb,KAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,QAAD;AACE,IAAA,UAAU,EAAE,KADd;AAEE,IAAA,UAAU,EAAE,KAFd;AAGE,IAAA,YAAY,EAAE,IAHhB;AAIE,IAAA,WAAW,EAAET,QAJf;AAKE,IAAA,YAAY,MALd;AAME,IAAA,cAAc,EAAE,KANlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAQGX,GAAG,CAACK,MAAD,EAAS,CAACQ,IAAD,EAAOD,KAAP,KACX;AAAK,IAAA,GAAG,EAAEA,KAAV;AAAiB,IAAA,SAAS,EAAC,cAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAG,IAAA,IAAI,EAAEC,IAAI,CAACC,GAAL,KAAaO,SAAb,GAAyB,GAAzB,GAA+BR,IAAI,CAACC,GAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,GAAG,EAAED,IAAI,CAACS,KAAf;AAAsB,IAAA,GAAG,EAAC,MAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,EAIE;AAAK,IAAA,SAAS,EAAG,kBAAiBT,IAAI,CAACU,OAAQ,YAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAG,IAAA,SAAS,EAAC,eAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA8BV,IAAI,CAACW,MAAnC,CADF,EAEE;AAAG,IAAA,SAAS,EAAC,eAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA8BX,IAAI,CAACY,MAAnC,CAFF,EAGE;AAAG,IAAA,SAAS,EAAC,eAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA8BZ,IAAI,CAACa,MAAnC,CAHF,EAIGb,IAAI,CAACc,WAAL,KAAqBN,SAArB,IACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAG,IAAA,IAAI,EAAER,IAAI,CAACC,GAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAoBD,IAAI,CAACc,WAAzB,CADF,CALJ,CAJF,CADE,CARN,CADF,CAFJ,CADF;AAkCD;;AAEDjB,SAAS,CAACkB,SAAV,GAAsBxB,QAAtB;AAEA,eAAeM,SAAf","sourcesContent":["import React, { useState } from 'react';\r\nimport { map, isEmpty } from 'lodash';\r\nimport PropTypes from 'prop-types';\r\nimport { Carousel } from 'react-responsive-carousel';\r\n\r\nconst propType = {\r\n  silder: PropTypes.array.isRequired,\r\n  className: PropTypes.string\r\n};\r\n\r\nfunction Carousels({ silder, className }) {\r\n  const getItems = (index, item) => {\r\n    const url = item.props.children[0].props.href;\r\n    window.location.href = url;\r\n  };\r\n  return (\r\n    <React.Fragment>\r\n      {!isEmpty(silder) && (\r\n        <div className={className} style={{ boxShadow: '0px 2px 26px 0px rgba(0,0,0,0.09)' }}>\r\n          <Carousel\r\n            showThumbs={false}\r\n            showStatus={false}\r\n            infiniteLoop={true}\r\n            onClickItem={getItems}\r\n            emulateTouch\r\n            showIndicators={false}\r\n          >\r\n            {map(silder, (item, index) => (\r\n              <div key={index} className=\"silder_items\">\r\n                <a href={item.url === undefined ? '#' : item.url}>\r\n                  <img src={item.image} alt=\"icon\" />\r\n                </a>\r\n                <div className={`silder_content ${item.options} container`}>\r\n                  <p className=\"text_content1\">{item.note_1}</p>\r\n                  <p className=\"text_content2\">{item.note_2}</p>\r\n                  <p className=\"text_content3\">{item.note_3}</p>\r\n                  {item.text_action !== undefined && (\r\n                    <button>\r\n                      <a href={item.url}>{item.text_action}</a>\r\n                    </button>\r\n                  )}\r\n                </div>\r\n              </div>\r\n            ))}\r\n          </Carousel>\r\n        </div>\r\n      )}\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nCarousels.propTypes = propType;\r\n\r\nexport default Carousels;\r\n"]},"metadata":{},"sourceType":"module"}