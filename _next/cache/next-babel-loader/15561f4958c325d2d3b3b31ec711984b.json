{"ast":null,"code":"var _jsxFileName = \"F:\\\\MGROUP\\\\MBnextjs\\\\mb-frontend\\\\components\\\\common\\\\download\\\\Question.js\";\nvar __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nconst propTypes = {\n  question: PropTypes.string,\n  answer: PropTypes.string,\n  isChecked: PropTypes.func\n};\n\nfunction Question({\n  question,\n  answer,\n  isChecked\n}) {\n  const {\n    0: isOpen,\n    1: setIsOpen\n  } = useState(isChecked);\n  return __jsx(\"div\", {\n    className: \"container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: \"accodion accodion-1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: \"accodion-tab\",\n    onClick: () => setIsOpen(!isOpen),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, __jsx(\"input\", {\n    type: \"checkbox\",\n    checked: isOpen,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }), __jsx(\"label\", {\n    className: \"accodion-title no-borber\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, __jsx(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, question), __jsx(\"span\", {\n    className: \"triangle\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, __jsx(\"i\", {\n    className: \"icon-plus\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }))), __jsx(\"div\", {\n    className: \"accodion-content entry-content\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: \"inner\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, answer)))));\n}\n\nQuestion.propTypes = propTypes;\nexport default Question;","map":{"version":3,"sources":["F:/MGROUP/MBnextjs/mb-frontend/components/common/download/Question.js"],"names":["React","useState","PropTypes","propTypes","question","string","answer","isChecked","func","Question","isOpen","setIsOpen"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,MAAMC,SAAS,GAAG;AAChBC,EAAAA,QAAQ,EAAEF,SAAS,CAACG,MADJ;AAEhBC,EAAAA,MAAM,EAAEJ,SAAS,CAACG,MAFF;AAGhBE,EAAAA,SAAS,EAAEL,SAAS,CAACM;AAHL,CAAlB;;AAMA,SAASC,QAAT,CAAkB;AAAEL,EAAAA,QAAF;AAAYE,EAAAA,MAAZ;AAAoBC,EAAAA;AAApB,CAAlB,EAAmD;AACjD,QAAM;AAAA,OAACG,MAAD;AAAA,OAASC;AAAT,MAAsBV,QAAQ,CAACM,SAAD,CAApC;AACA,SACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,cAAf;AAA8B,IAAA,OAAO,EAAE,MAAMI,SAAS,CAAC,CAACD,MAAF,CAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAO,IAAA,IAAI,EAAC,UAAZ;AAAuB,IAAA,OAAO,EAAEA,MAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE;AAAO,IAAA,SAAS,EAAC,0BAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAON,QAAP,CADF,EAEE;AAAM,IAAA,SAAS,EAAC,UAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAG,IAAA,SAAS,EAAC,WAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAFF,CAFF,EAQE;AAAK,IAAA,SAAS,EAAC,gCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAwBE,MAAxB,CADF,CARF,CADF,CADF,CADF;AAkBD;;AAEDG,QAAQ,CAACN,SAAT,GAAqBA,SAArB;AAEA,eAAeM,QAAf","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst propTypes = {\r\n  question: PropTypes.string,\r\n  answer: PropTypes.string,\r\n  isChecked: PropTypes.func\r\n};\r\n\r\nfunction Question({ question, answer, isChecked }) {\r\n  const [isOpen, setIsOpen] = useState(isChecked);\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"accodion accodion-1\">\r\n        <div className=\"accodion-tab\" onClick={() => setIsOpen(!isOpen)}>\r\n          <input type=\"checkbox\" checked={isOpen} />\r\n          <label className=\"accodion-title no-borber\">\r\n            <span>{question}</span>\r\n            <span className=\"triangle\">\r\n              <i className=\"icon-plus\"></i>\r\n            </span>\r\n          </label>\r\n          <div className=\"accodion-content entry-content\">\r\n            <div className=\"inner\">{answer}</div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nQuestion.propTypes = propTypes;\r\n\r\nexport default Question;\r\n"]},"metadata":{},"sourceType":"module"}