{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\n\nvar _marked =\n/*#__PURE__*/\n_regeneratorRuntime.mark(pageSaga),\n    _marked2 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(pagesBySaga),\n    _marked3 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(rootSaga);\n\nimport actions from './actions';\nimport { takeLatest, put, all, fork } from 'redux-saga/effects';\nimport { getPageService, getPagesByIdService } from '../../services/page';\nimport { filter } from 'lodash';\n\nfunction pageSaga() {\n  return _regeneratorRuntime.wrap(function pageSaga$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.next = 2;\n          return takeLatest(actions.GET_HOME_REQUEST,\n          /*#__PURE__*/\n          _regeneratorRuntime.mark(function _callee(params) {\n            var name, res, silder, silderData, i;\n            return _regeneratorRuntime.wrap(function _callee$(_context) {\n              while (1) {\n                switch (_context.prev = _context.next) {\n                  case 0:\n                    name = params.name;\n                    _context.prev = 1;\n                    _context.next = 4;\n                    return getPageService(name);\n\n                  case 4:\n                    res = _context.sent;\n\n                    if (!(res.status === 200)) {\n                      _context.next = 15;\n                      break;\n                    }\n\n                    silder = [];\n                    _context.next = 9;\n                    return filter(res.data.pageBlocks, function (item) {\n                      return item.name === 'Silder';\n                    });\n\n                  case 9:\n                    silderData = _context.sent;\n\n                    for (i = 0; i < silderData.length; i++) {\n                      silder = [].concat(_toConsumableArray(silder), _toConsumableArray(JSON.parse(silderData[i].content)));\n                    }\n\n                    _context.next = 13;\n                    return put({\n                      type: actions.GET_HOME_RESPONSE,\n                      data: res.data,\n                      silder: silder,\n                      router: name\n                    });\n\n                  case 13:\n                    _context.next = 15;\n                    break;\n\n                  case 15:\n                    _context.next = 19;\n                    break;\n\n                  case 17:\n                    _context.prev = 17;\n                    _context.t0 = _context[\"catch\"](1);\n\n                  case 19:\n                  case \"end\":\n                    return _context.stop();\n                }\n              }\n            }, _callee, null, [[1, 17]]);\n          }));\n\n        case 2:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked);\n}\n\nfunction pagesBySaga() {\n  return _regeneratorRuntime.wrap(function pagesBySaga$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          _context4.next = 2;\n          return takeLatest(actions.GET_PAGES_BY_ID_REQUEST,\n          /*#__PURE__*/\n          _regeneratorRuntime.mark(function _callee2(params) {\n            var data, res;\n            return _regeneratorRuntime.wrap(function _callee2$(_context3) {\n              while (1) {\n                switch (_context3.prev = _context3.next) {\n                  case 0:\n                    data = params.data;\n                    _context3.prev = 1;\n                    _context3.next = 4;\n                    return getPagesByIdService(data);\n\n                  case 4:\n                    res = _context3.sent;\n\n                    if (!(res.status === 200)) {\n                      _context3.next = 10;\n                      break;\n                    }\n\n                    _context3.next = 8;\n                    return put({\n                      type: actions.GET_PAGES_BY_ID_RESPONSE,\n                      data: res.data\n                    });\n\n                  case 8:\n                    _context3.next = 10;\n                    break;\n\n                  case 10:\n                    _context3.next = 14;\n                    break;\n\n                  case 12:\n                    _context3.prev = 12;\n                    _context3.t0 = _context3[\"catch\"](1);\n\n                  case 14:\n                  case \"end\":\n                    return _context3.stop();\n                }\n              }\n            }, _callee2, null, [[1, 12]]);\n          }));\n\n        case 2:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  }, _marked2);\n}\n\nexport default function rootSaga() {\n  return _regeneratorRuntime.wrap(function rootSaga$(_context5) {\n    while (1) {\n      switch (_context5.prev = _context5.next) {\n        case 0:\n          _context5.next = 2;\n          return all([fork(pageSaga), fork(pagesBySaga)]);\n\n        case 2:\n        case \"end\":\n          return _context5.stop();\n      }\n    }\n  }, _marked3);\n}","map":{"version":3,"sources":["/home/user/mb-frontend/store/page/saga.js"],"names":["pageSaga","pagesBySaga","rootSaga","actions","takeLatest","put","all","fork","getPageService","getPagesByIdService","filter","GET_HOME_REQUEST","params","name","res","status","silder","data","pageBlocks","item","silderData","i","length","JSON","parse","content","type","GET_HOME_RESPONSE","router","GET_PAGES_BY_ID_REQUEST","GET_PAGES_BY_ID_RESPONSE"],"mappings":";;;;;yBAKUA,Q;;;yBAyBAC,W;;;yBAgBeC,Q;;AA9CzB,OAAOC,OAAP,MAAoB,WAApB;AACA,SAASC,UAAT,EAAqBC,GAArB,EAA0BC,GAA1B,EAA+BC,IAA/B,QAA2C,oBAA3C;AACA,SAASC,cAAT,EAAyBC,mBAAzB,QAAoD,qBAApD;AACA,SAASC,MAAT,QAAuB,QAAvB;;AAEA,SAAUV,QAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AACE,iBAAMI,UAAU,CAACD,OAAO,CAACQ,gBAAT;AAAA;AAAA,mCAA2B,iBAAUC,MAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AACjCC,oBAAAA,IADiC,GACxBD,MADwB,CACjCC,IADiC;AAAA;AAAA;AAG3B,2BAAML,cAAc,CAACK,IAAD,CAApB;;AAH2B;AAGjCC,oBAAAA,GAHiC;;AAAA,0BAInCA,GAAG,CAACC,MAAJ,KAAe,GAJoB;AAAA;AAAA;AAAA;;AAKjCC,oBAAAA,MALiC,GAKxB,EALwB;AAAA;AAMlB,2BAAMN,MAAM,CAACI,GAAG,CAACG,IAAJ,CAASC,UAAV,EAAsB,UAAAC,IAAI;AAAA,6BAAIA,IAAI,CAACN,IAAL,KAAc,QAAlB;AAAA,qBAA1B,CAAZ;;AANkB;AAM/BO,oBAAAA,UAN+B;;AAOrC,yBAASC,CAAT,GAAa,CAAb,EAAgBA,CAAC,GAAGD,UAAU,CAACE,MAA/B,EAAuCD,CAAC,EAAxC,EAA4C;AAC1CL,sBAAAA,MAAM,gCAAOA,MAAP,sBAAkBO,IAAI,CAACC,KAAL,CAAWJ,UAAU,CAACC,CAAD,CAAV,CAAcI,OAAzB,CAAlB,EAAN;AACD;;AAToC;AAUrC,2BAAMpB,GAAG,CAAC;AACRqB,sBAAAA,IAAI,EAAEvB,OAAO,CAACwB,iBADN;AAERV,sBAAAA,IAAI,EAAEH,GAAG,CAACG,IAFF;AAGRD,sBAAAA,MAAM,EAANA,MAHQ;AAIRY,sBAAAA,MAAM,EAAEf;AAJA,qBAAD,CAAT;;AAVqC;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAA3B,EAAhB;;AADF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAyBA,SAAUZ,WAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AACE,iBAAMG,UAAU,CAACD,OAAO,CAAC0B,uBAAT;AAAA;AAAA,mCAAkC,kBAAUjB,MAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AACxCK,oBAAAA,IADwC,GAC/BL,MAD+B,CACxCK,IADwC;AAAA;AAAA;AAGlC,2BAAMR,mBAAmB,CAACQ,IAAD,CAAzB;;AAHkC;AAGxCH,oBAAAA,GAHwC;;AAAA,0BAI1CA,GAAG,CAACC,MAAJ,KAAe,GAJ2B;AAAA;AAAA;AAAA;;AAAA;AAK5C,2BAAMV,GAAG,CAAC;AAAEqB,sBAAAA,IAAI,EAAEvB,OAAO,CAAC2B,wBAAhB;AAA0Cb,sBAAAA,IAAI,EAAEH,GAAG,CAACG;AAApD,qBAAD,CAAT;;AAL4C;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAlC,EAAhB;;AADF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAgBA,eAAe,SAAUf,QAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AACb,iBAAMI,GAAG,CAAC,CAACC,IAAI,CAACP,QAAD,CAAL,EAAiBO,IAAI,CAACN,WAAD,CAArB,CAAD,CAAT;;AADa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA","sourcesContent":["import actions from './actions';\nimport { takeLatest, put, all, fork } from 'redux-saga/effects';\nimport { getPageService, getPagesByIdService } from '../../services/page';\nimport { filter } from 'lodash';\n\nfunction* pageSaga() {\n  yield takeLatest(actions.GET_HOME_REQUEST, function*(params) {\n    const { name } = params;\n    try {\n      const res = yield getPageService(name);\n      if (res.status === 200) {\n        let silder = [];\n        const silderData = yield filter(res.data.pageBlocks, item => item.name === 'Silder');\n        for (let i = 0; i < silderData.length; i++) {\n          silder = [...silder, ...JSON.parse(silderData[i].content)];\n        }\n        yield put({\n          type: actions.GET_HOME_RESPONSE,\n          data: res.data,\n          silder,\n          router: name\n        });\n      } else {\n        // console.log(res);\n      }\n    } catch (error) {\n      // console.log(error);\n    }\n  });\n}\nfunction* pagesBySaga() {\n  yield takeLatest(actions.GET_PAGES_BY_ID_REQUEST, function*(params) {\n    const { data } = params;\n    try {\n      const res = yield getPagesByIdService(data);\n      if (res.status === 200) {\n        yield put({ type: actions.GET_PAGES_BY_ID_RESPONSE, data: res.data });\n      } else {\n        // console.log(res);\n      }\n    } catch (error) {\n      // console.log(error);\n    }\n  });\n}\n\nexport default function* rootSaga() {\n  yield all([fork(pageSaga), fork(pagesBySaga)]);\n}\n"]},"metadata":{},"sourceType":"module"}