{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useState, useEffect } from 'react';\nimport Select from 'react-select';\nimport { map } from 'lodash';\nimport { MapActions } from '../../store/actions';\nimport { connect } from 'react-redux';\n\nfunction BoxSearch({\n  listBranches,\n  listProvince,\n  listDistrict,\n  searchBranches,\n  getProvince,\n  getDistrict\n}) {\n  const {\n    0: district,\n    1: setDistrict\n  } = useState('');\n  const {\n    0: branches_type,\n    1: setBranchesType\n  } = useState('Branch');\n  const {\n    0: province,\n    1: setProvince\n  } = useState('');\n  const {\n    0: query,\n    1: setQuery\n  } = useState(''); // district, branches_type, province, query\n\n  useEffect(() => {\n    searchBranches({\n      districtCity: district,\n      networkCategory: branches_type,\n      provinceCity: province,\n      search: query\n    });\n    getProvince();\n  }, [getProvince, searchBranches]);\n  useEffect(() => {\n    searchBranches({\n      districtCity: district,\n      networkCategory: branches_type,\n      provinceCity: province,\n      search: query\n    });\n  }, [district, branches_type, province, query]);\n\n  const handleProvince = provinceItem => {\n    setProvince(provinceItem.value);\n    getDistrict(provinceItem.value);\n  };\n\n  return __jsx(\"div\", {\n    className: \"ajax-content-map\"\n  }, __jsx(\"ul\", {\n    className: \"menu row grid-space-0\"\n  }, __jsx(\"li\", {\n    className: branches_type === 'Branch' ? 'col-6 active' : 'col-6',\n    onClick: () => setBranchesType('Branch')\n  }, __jsx(\"span\", {\n    className: \"item\"\n  }, \"Chi nh\\xE1nh\")), __jsx(\"li\", {\n    className: branches_type === 'ATM' ? 'col-6 active' : 'col-6',\n    onClick: () => setBranchesType('ATM')\n  }, __jsx(\"span\", {\n    className: \"item\"\n  }, \"ATM\"))), __jsx(\"div\", {\n    className: \"form-search-focus mb-20\"\n  }, __jsx(\"input\", {\n    type: \"text\",\n    placeholder: \"\\u0110\\u1ECBa \\u0111i\\u1EC3m\",\n    onChange: event => setQuery(event.target.value)\n  }), __jsx(\"button\", null, __jsx(\"i\", {\n    className: \"icon-search-2\"\n  }))), __jsx(\"div\", {\n    className: \"mb-20\"\n  }, __jsx(\"div\", null, \"T\\u1EC9nh/ Th\\xE0nh ph\\u1ED1\"), __jsx(Select, {\n    className: \"fix-select\",\n    placeholder: \"T\\u1EC9nh/ Th\\xE0nh ph\\u1ED1\",\n    options: listProvince,\n    onChange: handleProvince\n  })), __jsx(\"div\", {\n    className: \"mb-20\"\n  }, __jsx(\"div\", null, \"Qu\\u1EADn/Huy\\u1EC7n\"), __jsx(Select, {\n    className: \"fix-select1\",\n    placeholder: \"Qu\\u1EADn/Huy\\u1EC7n\",\n    options: listDistrict,\n    onChange: provinceItem => setDistrict(provinceItem.value)\n  })), __jsx(\"div\", {\n    className: \"map-list-store\"\n  }, map(listBranches, (branches, index) => __jsx(\"div\", {\n    className: (index + 1) % 2 === 0 ? 'item color-2' : (index + 1) % 3 === 0 ? 'item color-3' : 'item color-1',\n    key: index\n  }, __jsx(\"div\", {\n    className: \"location\"\n  }, __jsx(\"h5\", {\n    className: \"title\"\n  }, branches.address_name), __jsx(\"div\", {\n    className: \"address\"\n  }, branches.address))))));\n}\n\nconst mapStateToProps = state => {\n  return {\n    listBranches: state.mapReducer.listBranches,\n    listProvince: state.mapReducer.listProvince,\n    listDistrict: state.mapReducer.listDistrict\n  };\n};\n\nconst mapDispatchToProps = {\n  searchBranches: MapActions.searchBranchesAction,\n  getProvince: MapActions.getProvinceAction,\n  getDistrict: MapActions.getDistrictAction\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(BoxSearch);","map":null,"metadata":{},"sourceType":"module"}