{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nvar _marked =\n/*#__PURE__*/\n_regeneratorRuntime.mark(getProvinceSaga),\n    _marked2 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(getDistrictSaga),\n    _marked3 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(searchBranchesSaga),\n    _marked4 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(rootSaga);\n\nimport actions from './actions';\nimport { map } from 'lodash';\nimport { takeLatest, put, all, fork } from 'redux-saga/effects';\nimport { getProvinceService, getDistrictService, searchBranchesService } from '../../services/map';\n\nfunction getProvinceSaga() {\n  return _regeneratorRuntime.wrap(function getProvinceSaga$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.next = 2;\n          return takeLatest(actions.GET_PROVINCE_REQUEST,\n          /*#__PURE__*/\n          _regeneratorRuntime.mark(function _callee() {\n            var res, data;\n            return _regeneratorRuntime.wrap(function _callee$(_context) {\n              while (1) {\n                switch (_context.prev = _context.next) {\n                  case 0:\n                    _context.prev = 0;\n                    _context.next = 3;\n                    return getProvinceService();\n\n                  case 3:\n                    res = _context.sent;\n\n                    if (!(res.status === 200)) {\n                      _context.next = 10;\n                      break;\n                    }\n\n                    data = map(res.data, function (province) {\n                      return {\n                        value: province.id,\n                        label: province.name\n                      };\n                    });\n                    _context.next = 8;\n                    return put({\n                      type: actions.GET_PROVINCE_RESPONSE,\n                      data: data\n                    });\n\n                  case 8:\n                    _context.next = 10;\n                    break;\n\n                  case 10:\n                    _context.next = 14;\n                    break;\n\n                  case 12:\n                    _context.prev = 12;\n                    _context.t0 = _context[\"catch\"](0);\n\n                  case 14:\n                  case \"end\":\n                    return _context.stop();\n                }\n              }\n            }, _callee, null, [[0, 12]]);\n          }));\n\n        case 2:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked);\n}\n\nfunction getDistrictSaga() {\n  return _regeneratorRuntime.wrap(function getDistrictSaga$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          _context4.next = 2;\n          return takeLatest(actions.GET_DISTRICT_REQUEST,\n          /*#__PURE__*/\n          _regeneratorRuntime.mark(function _callee2(params) {\n            var id, res, data;\n            return _regeneratorRuntime.wrap(function _callee2$(_context3) {\n              while (1) {\n                switch (_context3.prev = _context3.next) {\n                  case 0:\n                    id = params.id;\n                    _context3.prev = 1;\n                    _context3.next = 4;\n                    return getDistrictService(id);\n\n                  case 4:\n                    res = _context3.sent;\n\n                    if (!(res.status === 200)) {\n                      _context3.next = 11;\n                      break;\n                    }\n\n                    data = map(res.data, function (district) {\n                      return {\n                        value: district.id,\n                        label: district.name\n                      };\n                    });\n                    _context3.next = 9;\n                    return put({\n                      type: actions.GET_DISTRICT_RESPONSE,\n                      data: data\n                    });\n\n                  case 9:\n                    _context3.next = 11;\n                    break;\n\n                  case 11:\n                    _context3.next = 15;\n                    break;\n\n                  case 13:\n                    _context3.prev = 13;\n                    _context3.t0 = _context3[\"catch\"](1);\n\n                  case 15:\n                  case \"end\":\n                    return _context3.stop();\n                }\n              }\n            }, _callee2, null, [[1, 13]]);\n          }));\n\n        case 2:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  }, _marked2);\n}\n\nfunction searchBranchesSaga() {\n  return _regeneratorRuntime.wrap(function searchBranchesSaga$(_context6) {\n    while (1) {\n      switch (_context6.prev = _context6.next) {\n        case 0:\n          _context6.next = 2;\n          return takeLatest(actions.SEARCH_BRANCHES_REQUEST,\n          /*#__PURE__*/\n          _regeneratorRuntime.mark(function _callee3(params) {\n            var res;\n            return _regeneratorRuntime.wrap(function _callee3$(_context5) {\n              while (1) {\n                switch (_context5.prev = _context5.next) {\n                  case 0:\n                    _context5.prev = 0;\n                    _context5.next = 3;\n                    return searchBranchesService(params.params);\n\n                  case 3:\n                    res = _context5.sent;\n\n                    if (!(res.status === 200)) {\n                      _context5.next = 9;\n                      break;\n                    }\n\n                    _context5.next = 7;\n                    return put({\n                      type: actions.SEARCH_BRANCHES_RESPONSE,\n                      data: res.data\n                    });\n\n                  case 7:\n                    _context5.next = 9;\n                    break;\n\n                  case 9:\n                    _context5.next = 13;\n                    break;\n\n                  case 11:\n                    _context5.prev = 11;\n                    _context5.t0 = _context5[\"catch\"](0);\n\n                  case 13:\n                  case \"end\":\n                    return _context5.stop();\n                }\n              }\n            }, _callee3, null, [[0, 11]]);\n          }));\n\n        case 2:\n        case \"end\":\n          return _context6.stop();\n      }\n    }\n  }, _marked3);\n}\n\nexport default function rootSaga() {\n  return _regeneratorRuntime.wrap(function rootSaga$(_context7) {\n    while (1) {\n      switch (_context7.prev = _context7.next) {\n        case 0:\n          _context7.next = 2;\n          return all([fork(getProvinceSaga), fork(getDistrictSaga), fork(searchBranchesSaga)]);\n\n        case 2:\n        case \"end\":\n          return _context7.stop();\n      }\n    }\n  }, _marked4);\n}","map":null,"metadata":{},"sourceType":"module"}