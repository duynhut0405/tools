{"ast":null,"code":"var _jsxFileName = \"F:\\\\MGROUP\\\\MBnextjs\\\\mb-frontend\\\\components\\\\block\\\\Question\\\\Item.js\";\nvar __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport ReactHtmlParser from 'react-html-parser';\nimport Proptypes from 'prop-types';\nvar propTypes = {\n  question: Proptypes.string,\n  answer: Proptypes.string\n};\n\nfunction QuestionItems(_ref) {\n  var question = _ref.question,\n      answer = _ref.answer;\n\n  var _useState = useState(false),\n      active = _useState[0],\n      setAcive = _useState[1];\n\n  return __jsx(\"div\", {\n    className: \"accodion-tab \",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, __jsx(\"input\", {\n    type: \"checkbox\",\n    checked: active,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }), __jsx(\"label\", {\n    className: \"accodion-title\",\n    onClick: function onClick() {\n      return setAcive(!active);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, __jsx(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, question), __jsx(\"span\", {\n    className: \"triangle\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, __jsx(\"i\", {\n    className: \"icon-plus\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }))), __jsx(\"div\", {\n    className: \"accodion-content entry-content\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: \"inner\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, ReactHtmlParser(answer))));\n}\n\nQuestionItems.propTypes = propTypes;\nexport default QuestionItems;","map":{"version":3,"sources":["F:/MGROUP/MBnextjs/mb-frontend/components/block/Question/Item.js"],"names":["React","useState","ReactHtmlParser","Proptypes","propTypes","question","string","answer","QuestionItems","active","setAcive"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,IAAMC,SAAS,GAAG;AAChBC,EAAAA,QAAQ,EAAEF,SAAS,CAACG,MADJ;AAEhBC,EAAAA,MAAM,EAAEJ,SAAS,CAACG;AAFF,CAAlB;;AAKA,SAASE,aAAT,OAA6C;AAAA,MAApBH,QAAoB,QAApBA,QAAoB;AAAA,MAAVE,MAAU,QAAVA,MAAU;;AAAA,kBAChBN,QAAQ,CAAC,KAAD,CADQ;AAAA,MACpCQ,MADoC;AAAA,MAC5BC,QAD4B;;AAG3C,SACE;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAO,IAAA,IAAI,EAAC,UAAZ;AAAuB,IAAA,OAAO,EAAED,MAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE;AAAO,IAAA,SAAS,EAAC,gBAAjB;AAAkC,IAAA,OAAO,EAAE;AAAA,aAAMC,QAAQ,CAAC,CAACD,MAAF,CAAd;AAAA,KAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAOJ,QAAP,CADF,EAEE;AAAM,IAAA,SAAS,EAAC,UAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAG,IAAA,SAAS,EAAC,WAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAFF,CAFF,EAQE;AAAK,IAAA,SAAS,EAAC,gCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAwBH,eAAe,CAACK,MAAD,CAAvC,CADF,CARF,CADF;AAcD;;AACDC,aAAa,CAACJ,SAAd,GAA0BA,SAA1B;AAEA,eAAeI,aAAf","sourcesContent":["import React, { useState } from 'react';\r\nimport ReactHtmlParser from 'react-html-parser';\r\nimport Proptypes from 'prop-types';\r\n\r\nconst propTypes = {\r\n  question: Proptypes.string,\r\n  answer: Proptypes.string\r\n};\r\n\r\nfunction QuestionItems({ question, answer }) {\r\n  const [active, setAcive] = useState(false);\r\n\r\n  return (\r\n    <div className=\"accodion-tab \">\r\n      <input type=\"checkbox\" checked={active} />\r\n      <label className=\"accodion-title\" onClick={() => setAcive(!active)}>\r\n        <span>{question}</span>\r\n        <span className=\"triangle\">\r\n          <i className=\"icon-plus\"></i>\r\n        </span>\r\n      </label>\r\n      <div className=\"accodion-content entry-content\">\r\n        <div className=\"inner\">{ReactHtmlParser(answer)}</div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nQuestionItems.propTypes = propTypes;\r\n\r\nexport default QuestionItems;\r\n"]},"metadata":{},"sourceType":"module"}