{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nvar __jsx = React.createElement;\nimport moment from 'moment';\nimport React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { withTranslation } from '../../i18n';\nimport RateSelect from './RateSelect';\nimport TableRate from './Table';\n\nfunction FormRate(_ref) {\n  var data = _ref.data;\n\n  var _useTranslation = useTranslation(),\n      t = _useTranslation.t;\n\n  return __jsx(\"section\", {\n    className: \"sec-b sec-tb sec-tigia\"\n  }, data !== undefined && __jsx(\"div\", {\n    className: \"container\"\n  }, __jsx(\"div\", {\n    className: \"row list-item\"\n  }, __jsx(\"div\", {\n    className: \"col-lg-7\"\n  }, __jsx(\"div\", {\n    className: \"divtigia\"\n  }, __jsx(\"h2\", null, t('exchange_rate')), __jsx(TableRate, {\n    data: data.exchangeRateDetail\n  }))), __jsx(\"div\", {\n    className: \"col-lg-5\"\n  }, __jsx(\"div\", {\n    className: \"divquidoi\"\n  }, __jsx(\"h2\", null, t('change_foreign_currency')), __jsx(\"div\", null, t('transfer_from')), __jsx(\"div\", {\n    className: \"input-group\"\n  }, __jsx(\"span\", {\n    className: \"input-group-addon none arrow\"\n  }, __jsx(RateSelect, {\n    data: data.exchangeRateDetail\n  }), __jsx(\"i\", {\n    className: \"icon-arrow-3\"\n  })), __jsx(\"input\", {\n    className: \"input\",\n    placeholder: t('amount')\n  })), __jsx(\"div\", null, t('to')), __jsx(\"div\", {\n    className: \"input-group\"\n  }, __jsx(\"span\", {\n    className: \"input-group-addon none\"\n  }, __jsx(RateSelect, {\n    data: data.exchangeRateDetail\n  }), __jsx(\"i\", {\n    className: \"icon-arrow-3\"\n  })), __jsx(\"input\", {\n    className: \"input\",\n    placeholder: t('amount')\n  })), __jsx(\"p\", null, \"\".concat(t('updated_at'), \" \").concat(moment(data.created_at).format('HH:mm'), \" \").concat(t('date'), \" \").concat(moment(data.created_at).format('DD/MM/YYYY'))))))));\n}\n\nFormRate.getInitialProps = function _callee() {\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          return _context.abrupt(\"return\", {\n            namespacesRequired: ['common', 'formRate']\n          });\n\n        case 1:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  });\n};\n\nexport default withTranslation('common')(FormRate);","map":null,"metadata":{},"sourceType":"module"}