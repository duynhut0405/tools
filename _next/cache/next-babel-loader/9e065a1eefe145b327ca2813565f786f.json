{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nvar _marked =\n/*#__PURE__*/\n_regeneratorRuntime.mark(getProvinceSaga),\n    _marked2 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(getDistrictSaga),\n    _marked3 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(searchBranchesSaga),\n    _marked4 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(rootSaga);\n\nimport actions from './actions';\nimport { map } from 'lodash';\nimport { takeLatest, put, all, fork } from 'redux-saga/effects';\nimport { getProvinceService, getDistrictService, searchBranchesService } from '../../services/map';\n\nfunction getProvinceSaga() {\n  return _regeneratorRuntime.wrap(function getProvinceSaga$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.next = 2;\n          return takeLatest(actions.GET_PROVINCE_REQUEST,\n          /*#__PURE__*/\n          _regeneratorRuntime.mark(function _callee() {\n            var res, data;\n            return _regeneratorRuntime.wrap(function _callee$(_context) {\n              while (1) {\n                switch (_context.prev = _context.next) {\n                  case 0:\n                    _context.prev = 0;\n                    _context.next = 3;\n                    return getProvinceService();\n\n                  case 3:\n                    res = _context.sent;\n\n                    if (!(res.status === 200)) {\n                      _context.next = 10;\n                      break;\n                    }\n\n                    data = map(res.data, function (province) {\n                      return {\n                        value: province.id,\n                        label: province.name\n                      };\n                    });\n                    _context.next = 8;\n                    return put({\n                      type: actions.GET_PROVINCE_RESPONSE,\n                      data: data\n                    });\n\n                  case 8:\n                    _context.next = 10;\n                    break;\n\n                  case 10:\n                    _context.next = 14;\n                    break;\n\n                  case 12:\n                    _context.prev = 12;\n                    _context.t0 = _context[\"catch\"](0);\n\n                  case 14:\n                  case \"end\":\n                    return _context.stop();\n                }\n              }\n            }, _callee, null, [[0, 12]]);\n          }));\n\n        case 2:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked);\n}\n\nfunction getDistrictSaga() {\n  return _regeneratorRuntime.wrap(function getDistrictSaga$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          _context4.next = 2;\n          return takeLatest(actions.GET_DISTRICT_REQUEST,\n          /*#__PURE__*/\n          _regeneratorRuntime.mark(function _callee2(params) {\n            var id, res, data;\n            return _regeneratorRuntime.wrap(function _callee2$(_context3) {\n              while (1) {\n                switch (_context3.prev = _context3.next) {\n                  case 0:\n                    id = params.id;\n                    _context3.prev = 1;\n                    _context3.next = 4;\n                    return getDistrictService(id);\n\n                  case 4:\n                    res = _context3.sent;\n\n                    if (!(res.status === 200)) {\n                      _context3.next = 11;\n                      break;\n                    }\n\n                    data = map(res.data, function (district) {\n                      return {\n                        value: district.id,\n                        label: district.name\n                      };\n                    });\n                    _context3.next = 9;\n                    return put({\n                      type: actions.GET_DISTRICT_RESPONSE,\n                      data: data\n                    });\n\n                  case 9:\n                    _context3.next = 11;\n                    break;\n\n                  case 11:\n                    _context3.next = 15;\n                    break;\n\n                  case 13:\n                    _context3.prev = 13;\n                    _context3.t0 = _context3[\"catch\"](1);\n\n                  case 15:\n                  case \"end\":\n                    return _context3.stop();\n                }\n              }\n            }, _callee2, null, [[1, 13]]);\n          }));\n\n        case 2:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  }, _marked2);\n}\n\nfunction searchBranchesSaga() {\n  return _regeneratorRuntime.wrap(function searchBranchesSaga$(_context6) {\n    while (1) {\n      switch (_context6.prev = _context6.next) {\n        case 0:\n          _context6.next = 2;\n          return takeLatest(actions.SEARCH_BRANCHES_REQUEST,\n          /*#__PURE__*/\n          _regeneratorRuntime.mark(function _callee3(params) {\n            var res;\n            return _regeneratorRuntime.wrap(function _callee3$(_context5) {\n              while (1) {\n                switch (_context5.prev = _context5.next) {\n                  case 0:\n                    _context5.prev = 0;\n                    _context5.next = 3;\n                    return searchBranchesService(params.params);\n\n                  case 3:\n                    res = _context5.sent;\n\n                    if (!(res.status === 200)) {\n                      _context5.next = 9;\n                      break;\n                    }\n\n                    _context5.next = 7;\n                    return put({\n                      type: actions.SEARCH_BRANCHES_RESPONSE,\n                      data: res.data\n                    });\n\n                  case 7:\n                    _context5.next = 9;\n                    break;\n\n                  case 9:\n                    _context5.next = 13;\n                    break;\n\n                  case 11:\n                    _context5.prev = 11;\n                    _context5.t0 = _context5[\"catch\"](0);\n\n                  case 13:\n                  case \"end\":\n                    return _context5.stop();\n                }\n              }\n            }, _callee3, null, [[0, 11]]);\n          }));\n\n        case 2:\n        case \"end\":\n          return _context6.stop();\n      }\n    }\n  }, _marked3);\n}\n\nexport default function rootSaga() {\n  return _regeneratorRuntime.wrap(function rootSaga$(_context7) {\n    while (1) {\n      switch (_context7.prev = _context7.next) {\n        case 0:\n          _context7.next = 2;\n          return all([fork(getProvinceSaga), fork(getDistrictSaga), fork(searchBranchesSaga)]);\n\n        case 2:\n        case \"end\":\n          return _context7.stop();\n      }\n    }\n  }, _marked4);\n}","map":{"version":3,"sources":["/home/user/mb-frontend/store/map/saga.js"],"names":["getProvinceSaga","getDistrictSaga","searchBranchesSaga","rootSaga","actions","map","takeLatest","put","all","fork","getProvinceService","getDistrictService","searchBranchesService","GET_PROVINCE_REQUEST","res","status","data","province","value","id","label","name","type","GET_PROVINCE_RESPONSE","GET_DISTRICT_REQUEST","params","district","GET_DISTRICT_RESPONSE","SEARCH_BRANCHES_REQUEST","SEARCH_BRANCHES_RESPONSE"],"mappings":"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","sourcesContent":["import actions from './actions';\nimport { map } from 'lodash';\nimport { takeLatest, put, all, fork } from 'redux-saga/effects';\nimport { getProvinceService, getDistrictService, searchBranchesService } from '../../services/map';\n\nfunction* getProvinceSaga() {\n  yield takeLatest(actions.GET_PROVINCE_REQUEST, function*() {\n    try {\n      const res = yield getProvinceService();\n      if (res.status === 200) {\n        const data = map(res.data, province => ({ value: province.id, label: province.name }));\n        yield put({ type: actions.GET_PROVINCE_RESPONSE, data: data });\n      } else {\n        // console.log(res);\n      }\n    } catch (error) {\n      // console.log(error);\n    }\n  });\n}\n\nfunction* getDistrictSaga() {\n  yield takeLatest(actions.GET_DISTRICT_REQUEST, function*(params) {\n    const { id } = params;\n    try {\n      const res = yield getDistrictService(id);\n      if (res.status === 200) {\n        const data = map(res.data, district => ({ value: district.id, label: district.name }));\n        yield put({ type: actions.GET_DISTRICT_RESPONSE, data: data });\n      } else {\n        // console.log(res);\n      }\n    } catch (error) {\n      // console.log(error);\n    }\n  });\n}\n\nfunction* searchBranchesSaga() {\n  yield takeLatest(actions.SEARCH_BRANCHES_REQUEST, function*(params) {\n    try {\n      const res = yield searchBranchesService(params.params);\n      if (res.status === 200) {\n        yield put({ type: actions.SEARCH_BRANCHES_RESPONSE, data: res.data });\n      } else {\n        // console.log(res);\n      }\n    } catch (error) {\n      // console.log(error);\n    }\n  });\n}\n\nexport default function* rootSaga() {\n  yield all([fork(getProvinceSaga), fork(getDistrictSaga), fork(searchBranchesSaga)]);\n}\n"]},"metadata":{},"sourceType":"module"}